$bootstrap_icons: 'https://unpkg.com/@unistylus/bootstrap-icons@latest';
$material_icons: 'https://unpkg.com/@unistylus/material-icons@latest';
$fluent_icons: 'https://unpkg.com/@unistylus/fluent-icons@latest';

@mixin register_icons($collection) {
  @each $name, $config in $collection {
    $length: length($config);
    $pack: nth($config, 1);
    .icon-#{$name} {
      @if $pack == 'direct' or $pack == '' {
        $src: nth($config, 2);
        background-image: url('#{$src}');
      } @else {
        @if $length == 3 {
          $vendorName: nth($config, 2);
          $version: nth($config, 3);
          @if $vendorName != null and $vendorName != '' {
            background-image: url('https://unpkg.com/@unistylus/#{$pack}-icons@#{$version}/#{$vendorName}.svg');
          } @else {
            background-image: url('https://unpkg.com/@unistylus/#{$pack}-icons@#{$version}/#{$name}.svg');
          }
        } @else if $length == 2 {
          $vendorName: nth($config, 2);
          background-image: url('https://unpkg.com/@unistylus/#{$pack}-icons@latest/#{$vendorName}.svg');
        } @else {
          background-image: url('https://unpkg.com/@unistylus/#{$pack}-icons@latest/#{$name}.svg');
        }
      }
    }
  }
}

@mixin register_theme_icons($data) {
  // properties
  @each $theme, $icons in $data {
    @if $theme != 'default' {
      // custom
      [data-theme="#{$theme}"] {
        @each $name, $url in $icons {
          --app-icon-#{$name}: url(#{$url});
        }
      }
    } @else {
      // default
      :root, [data-theme="default"] {
        @each $name, $url in $icons {
          --app-icon-#{$name}: url(#{$url});
        }
      }
    }
  }

  // rules
  $icons: map-get($data, 'default');
  @each $name, $url in $icons {
    .icon-#{$name} {
      background-image: var(--app-icon-#{$name});
    }
  }
}

@mixin register_group_theme_icon_properties($data, $group_name) {
  @each $theme, $icons in $data {
    @if $theme != 'default' {
      // custom
      [data-theme="#{$theme}"] {
        @each $name, $url in $icons {
          --group-#{$group_name}-icon-#{$name}: url(#{$url});
        }
      }
    } @else {
      // default
      :root, [data-theme="default"] {
        @each $name, $url in $icons {
          --group-#{$group_name}-icon-#{$name}: url(#{$url});
        }
      }
    }
  }
}

@mixin register_group_theme_icon_rules($icons, $group_name) {
  @each $name, $url in $icons {
    .icon-#{$name} {
      background-image: var(--group-#{$group_name}-icon-#{$name});
    }
  }
}
